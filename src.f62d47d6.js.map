{"version":3,"sources":["index.js"],"names":["daysRef","document","querySelector","hoursRef","minsRef","secsRef","dateRef","CountdownTimer","selector","targetDate","updateTime","setInterval","curentTime","Date","now","deltaTime","time","getTimeComponents","days","pad","Math","floor","hours","mins","secs","value","String","padStart","timer","writeDownNewDateInMarkup","textContent","start"],"mappings":";;;AA8DC,aAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EA5DD,QAAA,oBAIA,IAAMA,EAAUC,SAASC,cAAc,uBACjCC,EAAWF,SAASC,cAAc,wBAClCE,EAAUH,SAASC,cAAc,uBACjCG,EAAUJ,SAASC,cAAc,uBACjCI,EAAUL,SAASC,cAAc,4BAEjCK,EAAAA,WAC8C,SAAA,EAAA,GAApCC,IAAAA,EAAAA,EAAAA,SAAUC,EAAAA,EAAAA,WAAYC,EAAAA,EAAAA,WAAc,EAAA,KAAA,GAC3CF,KAAAA,SAAWA,EACXC,KAAAA,WAAaA,EACbC,KAAAA,WAAaA,EA8CrB,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,QA3CS,MAAA,WAAA,IAAA,EAAA,KAGNC,YAAY,WACJC,IAAAA,EAAaC,KAAKC,MAElBC,EAAY,EAAKN,WAAaG,EAE9BI,EAAO,EAAKC,kBAAkBF,GACpC,EAAKL,WAAWM,IACf,OAiCN,CAAA,IAAA,oBA9BmBA,MAAAA,SAAAA,GAQT,MAAA,CAAEE,KAPI,KAAKC,IAAIC,KAAKC,MAAML,EAAQ,QAO1BM,MAND,KAAKH,IACjBC,KAAKC,MAAOL,EAAQ,MAAyB,OAKzBO,KAHT,KAAKJ,IAAIC,KAAKC,MAAOL,EAAQ,KAAoB,MAGlCQ,KAFf,KAAKL,IAAIC,KAAKC,MAAOL,EAAQ,IAAc,SAwB3D,CAAA,IAAA,MAnBKS,MAAAA,SAAAA,GACKC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,SAkBpC,EAlDKpB,GAoCAqB,EAAQ,IAAIrB,EAAe,CAC/BC,SAAU,WACVC,WAAY,IAAII,KAAK,KAAM,GAAI,EAAG,EAAG,EAAG,EAAG,GAC3CH,WAAYmB,IAKd,SAASA,EAAsD,GAA3BX,IAAAA,EAAAA,EAAAA,KAAMI,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,KACrDxB,EAAQ8B,YAAiBZ,GAAAA,OAAAA,GACzBf,EAAS2B,YAAcR,EACvBlB,EAAQ0B,YAAcP,EACtBlB,EAAQyB,YAAcN,EACtBlB,EAAQwB,YAAc,KAAKrB,WAP7BmB,EAAMG","file":"src.f62d47d6.js","sourceRoot":"..\\src","sourcesContent":["// @import '../src/styles.css';\r\n\r\nimport './css/styles.css';\r\n// import '../src/css/styles.css';\r\n// console.log(\"goit-js-hw-11-timer\");\r\n\r\nconst daysRef = document.querySelector('[data-value=\"days\"]');\r\nconst hoursRef = document.querySelector('[data-value=\"hours\"]');\r\nconst minsRef = document.querySelector('[data-value=\"mins\"]');\r\nconst secsRef = document.querySelector('[data-value=\"secs\"]');\r\nconst dateRef = document.querySelector('[data-value=\"your-date\"]');\r\n\r\nclass CountdownTimer {\r\n  constructor({ selector, targetDate, updateTime }) {\r\n    this.selector = selector;\r\n    this.targetDate = targetDate;\r\n    this.updateTime = updateTime;\r\n  }\r\n\r\n  start() {\r\n    // console.log(targetDate.getTime());\r\n    // console.log(`targetDate.getTime() - `, targetDate.getTime());\r\n    setInterval(() => {\r\n      const curentTime = Date.now();\r\n      // console.log(`curentTime - `, this.targetDate);\r\n      const deltaTime = this.targetDate - curentTime;\r\n      // console.log(`deltaTime - `, deltaTime);\r\n      const time = this.getTimeComponents(deltaTime);\r\n      this.updateTime(time);\r\n    }, 1000);\r\n  }\r\n\r\n  getTimeComponents(time) {\r\n    const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\r\n    const hours = this.pad(\r\n      Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)),\r\n    );\r\n    const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\r\n    const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\r\n\r\n    return { days, hours, mins, secs };\r\n  }\r\n\r\n  pad(value) {\r\n    return String(value).padStart(2, '0');\r\n  }\r\n}\r\n\r\nconst timer = new CountdownTimer({\r\n  selector: '#timer-1',\r\n  targetDate: new Date(2021, 12, 1, 0, 0, 0, 0),\r\n  updateTime: writeDownNewDateInMarkup,\r\n});\r\n\r\ntimer.start();\r\n\r\nfunction writeDownNewDateInMarkup({ days, hours, mins, secs }) {\r\n  daysRef.textContent = `${days}`;\r\n  hoursRef.textContent = hours;\r\n  minsRef.textContent = mins;\r\n  secsRef.textContent = secs;\r\n  dateRef.textContent = this.targetDate;\r\n}\r\n"]}